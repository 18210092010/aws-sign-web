//
// AWS Signature v4 Implementation for Web Browsers
//
// Copyright (c) 2016 Daniel Joos
//
// Distributed under MIT license. (See file LICENSE)
//
!function(e,t){e.AwsSigner=t()}(this,function(){"use strict";function e(e,t){var r={host:t.uri.host,"content-type":e.config.defaultContentType,accept:e.config.defaultAcceptType,"x-amz-date":o(t.signDate)};t.request.method=t.request.method.toUpperCase(),t.request.body?t.payload=t.request.body:t.request.data&&e.payloadSerializer?t.payload=e.payloadSerializer(t.request.data):delete r["content-type"],t.request.headers=c(r,Object.keys(t.request.headers).reduce(function(e,r){return e[r.toLowerCase()]=t.request.headers[r],e},{})),t.sortedHeaderKeys=Object.keys(t.request.headers).sort(),t.request.headers["content-type"]&&(t.request.headers["content-type"]=t.request.headers["content-type"].split(";")[0]),"object"==typeof t.request.params&&angular.extend(t.uri.queryParams,t.request.params)}function t(e,t){t.signedHeaders=t.sortedHeaderKeys.map(function(e){return e.toLowerCase()}).join(";"),t.canonicalRequest=String(t.request.method).toUpperCase()+"\n"+encodeURI(t.uri.path)+"\n"+Object.keys(t.uri.queryParams).sort().map(function(e){return encodeURIComponent(e)+"="+encodeURIComponent(t.uri.queryParams[e])}).join("&")+"\n"+t.sortedHeaderKeys.map(function(e){return e.toLocaleLowerCase()+":"+t.request.headers[e]}).join("\n")+"\n\n"+t.signedHeaders+"\n"+e.hasher.hash(t.payload?t.payload:"")}function r(e,t){t.credentialScope=[o(t.signDate,!0),e.config.region,e.config.service,"aws4_request"].join("/"),t.stringToSign="AWS4-HMAC-SHA256\n"+o(t.signDate)+"\n"+t.credentialScope+"\n"+e.hasher.hash(t.canonicalRequest)}function n(e,t){var r=e.hasher.hmac,n=r(r(r(r("AWS4"+e.config.secretKey,o(t.signDate,!0),{hexOutput:!1}),e.config.region,{hexOutput:!1,textInput:!1}),e.config.service,{hexOutput:!1,textInput:!1}),"aws4_request",{hexOutput:!1,textInput:!1});t.signature=r(n,t.stringToSign,{textInput:!1})}function a(e,t){t.authorization="AWS4-HMAC-SHA256 Credential="+e.config.accessKeyId+"/"+t.credentialScope+", SignedHeaders="+t.signedHeaders+", Signature="+t.signature}function o(e,t){var r=e.toISOString().replace(/[:\-]|\.\d{3}/g,"").substr(0,17);return t?r.substr(0,8):r}function i(){return function(e){return JSON.stringify(e)}}function s(){function e(e){return/^\??(.*)$/.exec(e)[1].split("&").reduce(function(e,t){return t=/^(.+)=(.*)$/.exec(t),t&&(e[t[1]]=t[2]),e},{})}var t=document.createElement("a");return function(r){return t.href=r,{protocol:t.protocol,host:t.host,path:("/"!==t.pathname.charAt(0)?"/":"")+t.pathname,queryParams:e(t.search)}}}function u(){return{hash:function(e,t){t=c({hexOutput:!0,textInput:!0},t);var r=CryptoJS.SHA256(e);return t.hexOutput?r.toString(CryptoJS.enc.Hex):r},hmac:function(e,t,r){r=c({hexOutput:!0,textInput:!0},r);var n=CryptoJS.HmacSHA256(t,e,{asBytes:!0});return r.hexOutput?n.toString(CryptoJS.enc.Hex):n}}}function c(e){var t=[].slice.call(arguments,1);return t.forEach(function(t){t&&"object"==typeof t&&Object.keys(t).forEach(function(r){var n=t[r];"undefined"!=typeof n&&("object"==typeof n?e[r]=c({},n):e[r]=n)})}),e}function p(e,t){if("undefined"==typeof e||!e)throw new Error(t)}var h={region:"eu-west-1",service:"execute-api",defaultContentType:"application/json",defaultAcceptType:"application/json",payloadSerializerFactory:i,uriParserFactory:s,hasherFactory:u},d=function(e){this.config=c({},h,e),this.payloadSerializer=this.config.payloadSerializer||this.config.payloadSerializerFactory(),this.uriParser=this.config.uriParserFactory(),this.hasher=this.config.hasherFactory(),p(this.config.accessKeyId,"Signer requires AWS AccessKeyID"),p(this.config.secretKey,"Signer requires AWS SecretKey")};return d.prototype.sign=function(o,i){var s={request:c({},o),signDate:i||new Date,uri:this.uriParser(o.url)};return e(this,s),t(this,s),r(this,s),n(this,s),a(this,s),{Accept:s.request.headers.accept,Authorization:s.authorization,"Content-Type":s.request.headers["content-type"],"x-amz-date":s.request.headers["x-amz-date"],"x-amz-security-token":this.config.sessionToken||void 0}},d});