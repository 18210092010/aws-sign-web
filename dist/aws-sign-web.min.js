//
// AWS Signature v4 Implementation for Web Browsers
//
// Copyright (c) 2016 Daniel Joos
//
// Distributed under MIT license. (See file LICENSE)
//
!function(e,t){e.AwsSigner=t()}(this,function(){"use strict";function e(e,t){var n={host:t.uri.host,"content-type":e.config.defaultContentType,accept:e.config.defaultAcceptType,"x-amz-date":i(t.signDate)};t.request.data?t.request.data=JSON.stringify(t.request.data):delete n["content-type"],t.request.headers=u(n,Object.keys(t.request.headers).reduce(function(e,n){e[n.toLowerCase()]=t.request.headers[n]},{})),t.sortedHeaderKeys=Object.keys(t.request.headers).sort()}function t(e,t){t.signedHeaders=t.sortedHeaderKeys.map(function(e){return e.toLowerCase()}).join(";"),t.canonicalRequest=String(t.request.method).toUpperCase()+"\n"+encodeURI(t.uri.path)+"\n"+Object.keys(t.uri.queryParams).sort().map(function(e){return encodeURIComponent(e)+"="+encodeURIComponent(t.uri.queryParams[e])}).join("&")+"\n"+t.sortedHeaderKeys.map(function(e){return e.toLocaleLowerCase()+":"+t.request.headers[e]}).join("\n")+"\n\n"+t.signedHeaders+"\n"+e.hasher.hash(t.request.data?t.request.data:"")}function n(e,t){t.credentialScope=[i(t.signDate,!0),e.config.region,e.config.service,"aws4_request"].join("/"),t.stringToSign="AWS4-HMAC-SHA256\n"+i(t.signDate)+"\n"+t.credentialScope+"\n"+e.hasher.hash(t.canonicalRequest)}function r(e,t){var n=e.hasher.hmac,r=n(n(n(n("AWS4"+e.config.secretKey,i(t.signDate,!0),{hexOutput:!1}),e.config.region,{hexOutput:!1,textInput:!1}),e.config.service,{hexOutput:!1,textInput:!1}),"aws4_request",{hexOutput:!1,textInput:!1});t.signature=n(r,t.stringToSign,{textInput:!1})}function s(e,t){t.authorization="AWS4-HMAC-SHA256 Credential="+e.config.accessKeyId+"/"+t.credentialScope+", SignedHeaders="+t.signedHeaders+", Signature="+t.signature}function i(e,t){var n=e.toISOString().replace(/[:\-]|\.\d{3}/g,"").substr(0,17);return t?n.substr(0,8):n}function a(){function e(e){return/^\??(.*)$/.exec(e)[1].split("&").reduce(function(e,t){return t=/^(.+)=(.*)$/.exec(t),t&&(e[t[1]]=t[2]),e},{})}var t=document.createElement("a");return function(n){return t.href=n,{protocol:t.protocol,host:t.host,path:("/"!==t.pathname.charAt(0)?"/":"")+t.pathname,queryParams:e(t.search)}}}function o(){return{hash:function(e,t){t=u({hexOutput:!0,textInput:!0},t);var n=CryptoJS.SHA256(e);return t.hexOutput?n.toString(CryptoJS.enc.Hex):n},hmac:function(e,t,n){n=u({hexOutput:!0,textInput:!0},n);var r=CryptoJS.HmacSHA256(t,e,{asBytes:!0});return n.hexOutput?r.toString(CryptoJS.enc.Hex):r}}}function u(e){var t=[].slice.call(arguments,1);return t.forEach(function(t){t&&"object"==typeof t&&Object.keys(t).forEach(function(n){var r=t[n];"undefined"!=typeof r&&("object"==typeof r?e[n]=u({},r):e[n]=r)})}),e}function c(e,t){if("undefined"==typeof e||!e)throw new Error(t)}var h={region:"eu-west-1",service:"execute-api",defaultContentType:"application/json",defaultAcceptType:"application/json",uriParserFactory:a,hasherFactory:o},p=function(e){this.config=u({},h,e),this.uriParser=this.config.uriParserFactory(),this.hasher=this.config.hasherFactory(),c(this.config.accessKeyId,"Signer requires AWS AccessKeyID"),c(this.config.secretKey,"Signer requires AWS SecretKey")};return p.prototype.sign=function(i,a){var o={request:u({},i),signDate:a||new Date,uri:this.uriParser(i.url)};return e(this,o),t(this,o),n(this,o),r(this,o),s(this,o),{Accept:o.request.headers.Accept,Authorization:o.authorization,"x-amz-date":o.request.headers["x-amz-date"],"x-amz-security-token":this.config.sessionToken||void 0}},p});